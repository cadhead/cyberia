extends layouts/default.pug

block content
  - function showErrorMessage(type) {
    - if (type === 'login') return page.errors.filter(m => !m.param);
    - const errorsOfType = page.errors.filter((item) => item.param === type)
    - let errors = []; errorsOfType.forEach(err => { errors.push(err.msg) })
    - return errors
  - }

  if page.messages.length
    for m in page.messages
      div(class=!m.meta && 'Notification' class=m.meta && `Notification--${m.meta}`)
        button.Button.close
          i.fa.fa-times-circle
        if m.title 
          p.title=m.title
        p.description=m.text

  .Box
    .Box__content
      h1.title Authorization
      p.description Login and Registration page
      hr
      if !user.username
        h2.title Login form
        form(action="/login" method="POST")
          p.text-danger=showErrorMessage('login')
          input.Input(name="username", placeholder="username")
          input.Input(name="password", placeholder="password", type="password")
          p.mt-2
            label 
              input(type="checkbox" name="remember").mr-1
              span Remember me
          button.Button.mt-2(type="submit") Login
        hr
        h2.title Registration form
        hr
        form(action="/login/new" method="POST")
          p.text-danger=showErrorMessage('registration')
          input.Input(name="username", placeholder="username")
          p.text-danger=showErrorMessage('username')
          input.Input(name="email", placeholder="email", type="email")
          p.text-danger=showErrorMessage('email')
          input.Input(name="password", placeholder="password", type="password")
          p.text-danger=showErrorMessage('password')
          button.Button.mt-2(type="submit") Create an account
      else
        p=`Logged in as ${user.username}`

block footer 
  include parts/footer.pug
